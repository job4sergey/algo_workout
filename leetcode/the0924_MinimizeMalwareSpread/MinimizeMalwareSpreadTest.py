from com.letcode.common.TestCaseBase import TestCaseBase
from com.letcode.the0924_MinimizeMalwareSpread.Solution3 import Solution


class Test(TestCaseBase):
    def atest(self, graph, initial, e):
        so = Solution()
        self.assertEquals(so.minMalwareSpread(graph, initial), e)

    def test(self):
        atest = self.atest

        atest(graph=[[1, 1, 0], [1, 1, 0], [0, 0, 1]], initial=[0, 1], e=0)
        atest(graph=[[1, 0, 0], [0, 1, 0], [0, 0, 1]], initial=[0, 2], e=0)
        atest(graph=[[1, 1, 1], [1, 1, 1], [1, 1, 1]], initial=[1, 2], e=1)

        atest(graph=[[1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 1], [0, 1, 0, 1, 0, 0, 0, 0, 0, 0, 0],
                     [0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0],
                     [0, 1, 0, 1, 0, 1, 0, 0, 0, 0, 0], [1, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0],
                     [0, 0, 0, 1, 0, 1, 0, 0, 1, 1, 0],
                     [0, 0, 0, 0, 0, 0, 1, 1, 0, 0, 0], [0, 0, 1, 0, 0, 0, 1, 1, 0, 0, 0],
                     [0, 0, 0, 0, 0, 1, 0, 0, 1, 0, 0],
                     [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0], [1, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1]], initial=[7, 8, 6, 2, 3],
              e=2)

        atest([[1, 0, 0, 0], [0, 1, 0, 0], [0, 0, 1, 1], [0, 0, 1, 1]], [3, 1], 3)
